{"version":3,"sources":["../../../my-app/src/ctcUtil.js","../../../my-app/src/components/App.js","../../../my-app/src/serviceWorker.js","../../../my-app/src/index.js"],"names":["lac","amount","income_and_professional_tax_for","income","tax","income_tax_slab_1","income_tax_slab_2","income_tax_slab_3","cess","surcharge","console","log","income_tax_for","take_home","isEmployee","arguments","length","undefined","gst","GST_RATE","total_tax_for","Math","min","pf_for","floor","calcCtcToTakeHome","calcTakeHomeToCtc","desired_take_home","ctc","Home","state","employeeCtc","employeeTakeHome","consultantCtc","consultantTakeHome","onInputChange","e","target","name","value","_this","setState","react_default","a","createElement","type","this","onChange","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56c064ad.chunk.js","sourcesContent":["const PF_RATE = 0.2561;\nconst PROFESSIONAL_TAX = 2.5;\nconst PRESUMPTIVE_RATE = 0.5;\nconst EMPLOYEE_TAX_DEDUCTION = 160;\nconst GST_RATE = 0;\nconst SLAB_1 = 250;\nconst SLAB_2 = 500;\nconst SLAB_3 = 1000;\n\nconst lac = (amount) => amount * 100;\n\nconst income_tax_slab_1 = (income) => {\n\tif (income <= SLAB_1) {\n\t\treturn 0;\n\t}\n\tif (income > SLAB_2) {\n\t\tincome = SLAB_2;\n\t\tincome -= SLAB_1;\n\t\treturn income * 0.05;\n\t}\n};\n\nconst income_tax_slab_2 = (income) => {\n\tif (income <= SLAB_2) {\n\t\treturn 0;\n\t}\n\tif (income > SLAB_3) {\n\t\tincome = SLAB_3;\n\t\tincome -= SLAB_2;\n\t}\n\treturn income * 0.2;\n};\n\nconst income_tax_slab_3 = (income) => {\n\tif (income <= SLAB_3) {\n\t\treturn 0;\n\t}\n\tincome -= SLAB_3;\n\treturn income * 0.3;\n};\n\nconst income_tax_for = (income) => {\n\tif (income <= 500) {\n\t\treturn 0;\n\t}\n\tconst tax =\n\t\tincome_tax_slab_1(income) +\n\t\tincome_tax_slab_2(income) +\n\t\tincome_tax_slab_3(income);\n\tlet cess = tax * 0.04;\n\tlet surcharge = 0;\n\tif (income >= lac(100)) {\n\t\tconsole.log('Warning: ignoring surcharge for high income');\n\t}\n\tif (income >= lac(50)) {\n\t\tsurcharge = tax * 0.1;\n\t}\n\treturn tax + cess + surcharge;\n};\nconst income_and_professional_tax_for = (income) => {\n\treturn income_tax_for(income) + PROFESSIONAL_TAX;\n};\n\nconst total_tax_for = (income, isEmployee) => {\n\tif (isEmployee) {\n\t\treturn income_and_professional_tax_for(income - EMPLOYEE_TAX_DEDUCTION);\n\t}\n\n\tlet EFFECTIVE_GST_RATE = GST_RATE / (1 + GST_RATE);\n\tlet gst = income * EFFECTIVE_GST_RATE;\n\tincome -= gst;\n\tincome *= PRESUMPTIVE_RATE;\n\treturn income_and_professional_tax_for(income) + gst;\n};\n\nconst pf_for = (income) => Math.min(income, 15) * PF_RATE;\n\nconst take_home = (income, isEmployee = true) => {\n\tconst tax = total_tax_for(income, isEmployee);\n\tconst pf = isEmployee ? pf_for(income) : 0;\n\tincome = income - tax - pf;\n\treturn Math.floor(income / 12);\n};\n\n\nexport const calcCtcToTakeHome = (income, isEmployee = true) => {\n\tif (!income) return \"\";\n\treturn take_home(lac(income), isEmployee);\n};\n\nexport const calcTakeHomeToCtc = (desired_take_home, isEmployee) => {\n\tif (!desired_take_home) return \"\";\n\tlet ctc = 1;\n\twhile (take_home(ctc, isEmployee) < desired_take_home) {\n\t\tctc += 1;\n\t}\n\treturn ctc/100;\n};\n","import React from 'react';\nimport { calcCtcToTakeHome, calcTakeHomeToCtc } from \"../ctcUtil\";\nimport \"./App.css\";\nclass Home extends React.Component {\n\tstate = {\n\t\temployeeCtc: \"\",\n\t\temployeeTakeHome: \"\",\n\t\tconsultantCtc: \"\",\n\t\tconsultantTakeHome: \"\",\n\t}\n\n\tonInputChange = e => {\n\t\tif (e.target.name === \"employeeCtc\") {\n\t\t\tconst value = e.target.value;\n\t\t\tthis.setState({\n\t\t\t\temployeeCtc: value,\n\t\t\t\temployeeTakeHome: calcCtcToTakeHome(value),\n\t\t\t});\n\t\t}\n\t\tif(e.target.name === \"employeeTakeHome\") {\n\t\t\tconst value = e.target.value;\n\t\t\tthis.setState({\n\t\t\t\temployeeTakeHome: value,\n\t\t\t\temployeeCtc: calcTakeHomeToCtc(value),\n\t\t\t});\n\t\t}\n\t\tif (e.target.name === \"consultantCtc\") {\n\t\t\tconst value = e.target.value;\n\t\t\tthis.setState({\n\t\t\t\tconsultantCtc: value,\n\t\t\t\tconsultantTakeHome: calcCtcToTakeHome(value, false),\n\t\t\t});\n\t\t}\n\t\tif(e.target.name === \"consultantTakeHome\") {\n\t\t\tconst value = e.target.value;\n\t\t\tthis.setState({\n\t\t\t\tconsultantTakeHome: value,\n\t\t\t\tconsultantCtc: calcTakeHomeToCtc(value, false),\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<strong>Employee</strong><br/>\n\t\t\t\t<span>Take home CTC: </span>\n\t\t\t\t<input type=\"text\" name=\"employeeCtc\" value={this.state.employeeCtc} onChange={this.onInputChange}/>\n\t\t\t\t<span> lakhs</span>\n\t\t\t\t<span> gets </span>\n\t\t\t\t<input type=\"text\" name=\"employeeTakeHome\" value={this.state.employeeTakeHome} onChange={this.onInputChange}/>\n\t\t\t\t<span> thousands / month</span>\n\t\t\t\t<hr/>\n\n\t\t\t\t<strong>Consultant</strong><br/>\n\t\t\t\t<span>Take home CTC: </span>\n\t\t\t\t<input type=\"text\" name=\"consultantCtc\" value={this.state.consultantCtc} onChange={this.onInputChange}/>\n\t\t\t\t<span> lakhs</span>\n\t\t\t\t<span> gets </span>\n\t\t\t\t<input type=\"text\" name=\"consultantTakeHome\" value={this.state.consultantTakeHome} onChange={this.onInputChange}/>\n\t\t\t\t<span> thousands</span>\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}